R CODE
#packages
library(dismo)
library(kernlab)
library(maps)
library(mapdata)
library(maptools)
library(vegan)
library(GISTools) 
library(relaimpo)
library(dplyr)
library(rgdal)
library(rgeos)
library(geosphere)
library(corrplot)

#A. Loading Africa cotinent shapefile and Creating South America shapefile 
#A1. South America
sa<-map("worldHires",fill=TRUE,col="transparent", c("argentina", "bolivia", "brazil", "chile", "colombia", "ecuador", "guyana", "paraguay", "peru", "suriname", "uruguay", "venezuela"))
IDs <- sapply(strsplit(sa$names, ":"), function(x) x[1]) 
sa_pol<-map2SpatialPolygons(sa, IDs=IDs, proj4string = CRS("+proj=longlat +ellps=WGS84")) 
sa$range #South America Extent:xmin(West)=-109.44915 ,xmax(East) =-29.35973 , ymin(South) = -55.91971, ymax(North) =13.37862
noth.south.sa<-dd2dms(c(13.37862, -55.91971),NS=TRUE) #Transform decimal to DMS coordinate
east.west.sa<-dd2dms(c(-29.35973,-109.44915 ), NS=FALSE)#Transform decimal to DMS coordinate

#A2. Africa
setwd("/home/ricardo/Área de Trabalho/Agora vai/Africa shp") # Shapefile disponible at: http://maplibrary.org/library/stacks/Africa/index.htm
af<-readShapePoly('Africa.shp',proj4string = CRS('+proj=longlat +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +no_defs'))
af@bbox #box coordinates: xmin (West)=-25.35875 ,xmax (East) =51.41303 , ymin (South) =-46.97893, ymax (North) =37.34962
noth.south<-dd2dms(c(37.34962, -46.97893),NS=TRUE) #Transform decimal to DMS coordinate
east.west<-dd2dms(c(51.41303,-25.35875), NS=FALSE) #Transform decimal to DMS coordinate

#A3. Loading WorldClim variables with 2,5 arcmin resolution
setwd("/home/ricardo/Área de Trabalho/Agora vai/worldclim 2,5")
worl.clim<-list.files(pattern = ".bil")
worl.layers<-stack(worl.clim)

#A4. Loading Anthropic variables in 30 arc second resolution
#Footprint
setwd("/home/ricardo/Área de Trabalho/Agora vai/antropico/Footprint/foot")
foot.print<-raster('dblbnd.adf')
names(foot.print)<-'Footprint'
# Worldlight
setwd("C:/Users/Usuario/Desktop/Ricardo/Agora vai/antropico/Worl Light")
world.light<-raster("F182013.v4c_web.avg_vis.tif")
names(world.light)<-'Nightlight'

#A5. Align raster extension: To solve the dissimilarities between extent and resolution 
# of anthropogenic and climate rasters we resample the anthropic environmental layers using
# bilinear interpolation. This procedure allows obtaining a new raster file for each environmental 
# variable with the same extent and resolution of climatic rasters. After the procedure, 
# all raster files can be stacked due the same resolution, extent, and projection.

new.res<-extent(-180,180,-60,90)
new.r<-raster(new.res, nrows=3600, ncols=8640, crs=worl.layers@crs)
footprint.resample<-resample(foot.print, new.r, method="bilinear")
worldlight.resample<-resample(world.light, new.r, method="bilinear")

#A6. Downscale resolution from 0.041º (2,5 arcminutes) to 0.25º (~30km de grid)
vars<-stack(worl.layers,footprint.resample,worldlight.resample)
new.resolution<-aggregate(vars, fact=6,fun=mean)# function aggregate dissolve a specific number of grid cell (fact argument) based on a specific parameter (mean) 
coord.NewRes<-xyFromCell(new.resolution, 1:ncell(new.resolution))
value.NewRes<-extract(new.resolution, 1:ncell(new.resolution))
NewRes.raster<-cbind(coord.NewRes,value.NewRes)

setwd("C:/Users/Usuario/Desktop/Ricardo/Agora vai/Rasters txt")
write.table(NewRes.raster, "NewRes.txt", sep=" ", row.names = F)

#A7. Native and Non native masks
# Native mask
nat.crop<-crop(new.resolution, extent(af))
nat.mask<-mask(nat.crop,af)
coord.nat<-xyFromCell(nat.mask,1:ncell(nat.mask))
nat.extr<-extract(nat.mask,1:ncell(nat.mask), df=T)
nat.r<-cbind(coord.nat,nat.extr[,-1])#-1 to remove ID collumn generated by df=T args

setwd("C:/Users/Usuario/Desktop/Ricardo/Agora vai/Rasters txt")
write.table(nat.r,"Africa.raster.txt", sep=" ", row.names = F) #save raster in text files

# Check the correlation between text files and extracte values from rasters 
nat.txt<-read.table("Africa.raster.txt", header=T)[,-c(1,2)]#[,-c(1,2)] remove coordinate columns
nat.lista.txt<-as.list(nat.txt)
nat.lista.extract<-as.list(nat.r[,-c(1,2)])#[,-c(1,2)] to remove coordinates added in nat.r object

#Check the correlations values
nat.cor.val<-mapply(function(x,y){cor(na.omit(x),na.omit(y))},x=nat.lista.txt,y=nat.lista.extract)

#plot the correlation values
m <- rbind(c(1,2,3,4,5,6), c(7,8,9,10,11,12), c(13,14,15,16,17,18), c(19,20,21,22,23,24))
par(mar=c(4,4,2,1))
layout(m)
nat.cor.plot<-mapply(function(x,y){plot(nat.lista.txt[[x]],nat.lista.extract[[y]], pch=19,cex=0.5,  xlab='Values from TXT files', ylab='Values from raster files', main=x)
},x=names(nat.lista.txt),y=names(nat.lista.extract))

# Non native
exo.crop<-crop(new.resolution, extent(sa_pol))
exo.mask<-mask(exo.crop,sa_pol)
coord.exo<-xyFromCell(exo.mask,1:ncell(exo.mask))
exo.extr<-extract(exo.mask,1:ncell(exo.mask), df=T)
exo.r<-cbind(coord.exo,exo.extr[,-1])

setwd("C:/Users/Usuario/Desktop/Ricardo/Agora vai/Rasters txt")
write.table(exo.r,"SAmerica.raster.txt", sep=" ", row.names = F)

exo.txt<-read.table("SAmerica.raster.txt", header=T)[,-c(1,2)]
exo.lista.txt<-as.list(exo.txt)
exo.lista.extract<-as.list(exo.r[,-c(1,2)])
exo.cor.val<-mapply(function(x,y){cor(na.omit(x),na.omit(y))},x=exo.lista.txt,y=exo.lista.extract)

m <- rbind(c(1,2,3,4,5,6), c(7,8,9,10,11,12), c(13,14,15,16,17,18), c(19,20,21,22,23,24))
par(mar=c(4,4,2,1))
layout(m)
exo.cor.plot<-mapply(function(x,y){plot(exo.lista.txt[[x]],exo.lista.extract[[y]], pch=19,cex=0.5,  xlab='Values from TXT files', ylab='Values from raster files', main=x)
},x=names(exo.lista.txt),y=names(exo.lista.extract))

#============================Variable Selection=========================================
rm(list=ls())
setwd("/home/ricardo/Área de Trabalho/Agora vai/Rasters txt")
oco<-read.table("oco_1320.txt", header=T)

#We chose to remove the variables Bio2(15): Mean Diurnal Range , Bio3(16): Isothermality,
# Bio4(17): Temperature Seasonality, Bio15(10): Precipitation Seasonality. (for more information see supplementary methods)
nat<-read.table("Africa.raster.txt", header=T)[,-c(10,15,16,17,23,24)]# [,-c(10,15,16,17,23,24)] Removes the previously excluded variables, and anthropic variables that are not used in the PCA
gridded(nat)<- ~x+y
nat.r<-stack(nat)
oco.values<-scale(extract(nat.r, oco, na.rm=T))

# To test the influence of altitude on the selection of variables, we performed the selection procedure with and without
# The environmental layer of altitude and chose to select the variables that present better variance explained
# By PCA. Since the difference between the values and retained variables was low in the first component, we used the variables
# Selected without the altitude layer, which indicates that this layer has low influence on the selection. Explaining
# Also its irrelevance, since the species can be found in regions of up to 3500 meters of altitude.

pca<-prcomp(na.omit(oco.values))
autovalores<-apply(pca$x,2,var) # Variability retained by each component. Used to select the axes that best represent the data variability (use the Broken Stick method)
per<-round((autovalores/sum(autovalores))*100,3);per#portion of axes explanation
eixos<-rbind(bstick(pca),apply(pca$x,2,var));eixos
row.names(eixos)<-c('Broken-Stick', 'Eigenvalues')
eixos

setwd("C:/Users/Usuario/Desktop/Ricardo/Agora vai/Rasters txt/Sele??o variaveis")
write.table(per,"porcentagem dos eixos.txt",sep=" ", row.names = F)
write.table(eixos,"eixos_bs.txt",sep=" ", row.names = T)
write.table(pca$rotation[,1:2],"loadings.txt",sep=" ", row.names = T)


pca.no_alt<-prcomp(na.omit(oco.values[,-1])) #[,-1] remove altitude layer
autovalores.no_alt<-apply(pca.no_alt$x,2,var)
per.no_alt<-round((autovalores.no_alt/sum(autovalores.no_alt))*100,3);per.no_alt
eixos.no_alt<-rbind(bstick(pca.no_alt),apply(pca.no_alt$x,2,var));eixos.no_alt
row.names(eixos.no_alt)<-c('Broken-Stick', 'Eigenvalues')
eixos.no_alt

write.table(per.no_alt,"porcentagem dos eixos_no alt.txt",sep=" ", row.names = F)
write.table(eixos.no_alt,"eixos_bs_no alt.txt",sep=" ", row.names = T)
write.table(pca.no_alt$rotation[,1:2],"loadings_no alt.txt",sep=" ", row.names = T)

#Ploting variables
par(mfrow=c(1,2))
plot(pca$rotation, asp = 1, pch = 20, main = "Whith altitude layer", xlab = per[1], ylab = per[2]) 
abline(v = 0, h = 0)
arrows(0, 0, pca$rotation[, 1], pca$rotation[, 2])
text(pca$rotation, rownames(pca$rotation), pos = 1, cex = 0.8 )

plot(pca.no_alt$rotation, asp = 1, pch = 20, main = "Whithout altitude layer", xlab = per.no_alt[1], ylab = per.no_alt[2]) 
abline(v = 0, h = 0)
arrows(0, 0, pca.no_alt$rotation[, 1], pca.no_alt$rotation[, 2])
text(pca.no_alt$rotation, rownames(pca.no_alt$rotation), pos = 2, cex = 0.8 )

#Final plot whithout altitude
plot(pca.no_alt$rotation, asp = 1, pch = 20, type="n",main = "Whithout altitude layer", xlab = "Eixo x “PCI (44.011%)", ylab = "Eixo y “PCII (28.976%)") 
abline(v = 0, h = 0)
points(pca.no_alt$rotation[13,1],pca.no_alt$rotation[13,2], pch=19)
points(pca.no_alt$rotation[c(2,11,14),1],pca.no_alt$rotation[c(2,11,14),2], pch=19, col='darkgreen')
points(pca.no_alt$rotation[1,1],pca.no_alt$rotation[1,2], col='blue', pch=19)
points(pca.no_alt$rotation[c(3,12,15),1],pca.no_alt$rotation[c(3,12,15),2], pch=19, col='red')
points(pca.no_alt$rotation[c(5,7,10),1],pca.no_alt$rotation[c(5,7,10),2], pch=19, col='yellow')
points(pca.no_alt$rotation[4,1],pca.no_alt$rotation[4,2], col='purple', pch=19)
points(pca.no_alt$rotation[c(6,8,9),1],pca.no_alt$rotation[c(6,8,9),2], pch=19, col='orange')
arrows(0, 0, pca.no_alt$rotation[, 1], pca.no_alt$rotation[, 2])
text(pca.no_alt$rotation, rownames(pca.no_alt$rotation), pos = 2, cex = 0.8 )

#Selecting the variables: Generating environmental layers for modeling the species.
setwd("C:/Users/Usuario/Desktop/Ricardo/Agora vai/Rasters txt")
nat.raster.df<-read.table("Africa.raster.txt", header=T)[,-c(10,15,16,17)]
selected.vars<-c('x','y','bio1','bio5','bio6','bio7','bio12','bio13','bio17','Footprint','Nightlight') #selected colnames vector
native.selected<-nat.raster.df[colnames(nat.raster.df)%in%selected.vars]#select collumn based in colnames vector
names(native.selected)#Check order of identities
names(native.selected)<-c('x','y',
                          "bio1 = Annual Mean Temperature",
                          "bio12 = Annual Precipitation",
                          "bio13 = Precipitation of Wettest Month",
                          "bio17 =  Precipitation of Driest Quarter",
                          "bio5 = Max Temperature of Warmest Month",
                          "bio6 = Min Temperature of Coldest Month",
                          "bio7 = Temperature Annual Range",
                          "Footprint",
                          "Nightlight")# Identeificando cada variável por seus atributos
summary(native.selected)#Checking for inconsistencies between attributes and values.

setwd("C:/Users/Usuario/Desktop/Ricardo/Agora vai/Rasters txt")
write.table(native.selected, "Native raster.txt", sep=" ", row.names = F)

exo.raster.df<-read.table("SAmerica.raster.txt", header=T)[,-c(10,15,16,17)]
exotic.selected<-exo.raster.df[colnames(exo.raster.df)%in%selected.vars]
names(exotic.selected)
names(exotic.selected)<-c('x','y',
                          "bio1 = Annual Mean Temperature",
                          "bio12 = Annual Precipitation",
                          "bio13 = Precipitation of Wettest Month",
                          "bio17 =  Precipitation of Driest Quarter",
                          "bio5 = Max Temperature of Warmest Month",
                          "bio6 = Min Temperature of Coldest Month",
                          "bio7 = Temperature Annual Range",
                          "Footprint",
                          "Nightlight")
summary(exotic.selected)
write.table(exotic.selected, "Exotic raster.txt", sep=" ", row.names = F)
#####============================Modeling Methods============================================
rm(list=ls())

setwd("C:/Users/Usuario/Desktop/Ricardo/Agora vai/Rasters txt")

af<-round(read.table("Native raster.txt", header=T),4)
summary(af)

gridded(af)<- ~x+y
nat<-stack(af)
crs(nat)<-"+proj=longlat +ellps=WGS84"

as<-round(read.table("Exotic raster.txt",header=T),4)
gridded(as)<- ~x+y
exo<-stack(as)
crs(exo)<-"+proj=longlat +ellps=WGS84"

oco<-read.table('oco_1320.txt',header=T)
presvals <- na.omit(extract(nat, oco))
backgr <- randomPoints(nat, nrow(presvals))


#Functions
tss<-function(conf.m){#Calc TSS based on confusion matrix
  a <- conf.m[1, 1]
  b <- conf.m[1, 2]
  c <- conf.m[2, 1]
  d <- conf.m[2, 2]
  sens <- a/(a + c);sens
  spec <- d/(b + d);spec
  TSS<- (sens + spec) - 1
  return(TSS)
}
kappa.acc<-function(conf.m){ #Calc Kappa based on confusion matrix
  n <- sum(conf.m)
  colsums <- apply(conf.m, 2, sum)
  rowsums <- apply(conf.m, 1, sum)
  t1 = sum(diag(conf.m))/n
  t2 = sum(rowsums * colsums)/(n^2)
  k<-(t1 - t2)/(1 - t2)
  return(k)
}

#================================BIOCLIM==================================

output.nat<-NULL
output.exo<-NULL
auc<-NULL
thr.val<-NULL
ts<-NULL
k<-NULL

start.time <- Sys.time()

for(i in 1:100){
  group_pres <- kfold(oco, 5)
  pres_train <- oco[group_pres != 1, ]
  pres_test <- oco[group_pres == 1, ]
  group_bkg <- kfold(backgr, 5)
  backg_train <- backgr[group_bkg != 1, ]
  backg_test <- backgr[group_bkg == 1, ]
  model <- bioclim(nat, pres_train)
  model.nat <- predict(model, nat)
  model.exo <- predict(model, exo)
  output.nat <- cbind(output.nat, values(model.nat))
  output.exo <- cbind(output.exo, values(model.exo))
  p<- extract(model.nat, pres_test)
  a<- extract(model.nat, backg_test)
  model.eval <- evaluate(model, p=p, a=a)
  mod.thr<- threshold(model.eval)
  thr.val<-rbind(thr.val,mod.thr)
  thr<-mod.thr[[5]]
  comb = c(p,a)
  group = c(rep(1, length(p)), rep(0, length(a)))
  mv <- wilcox.test(p,a)
  auc[i]<- as.numeric(mv$statistic) / (length(p) * length(a))
  vp<-length(p[p >= thr])
  fp<-length(a[a >= thr])
  fn<-length(p[p < thr])
  vn<-length(a[a < thr])
  mc<-matriz<-matrix(c(vp,fn,fp,vn), nrow = 2,ncol = 2)
  ts[i]<-tss(mc)
  k[i]<-kappa.acc(mc)
  final<-list(NAT=output.nat,EXO=output.exo,THR=thr.val,VAL=cbind(auc,ts,k))
}

end.time <- Sys.time()
time.taken <- end.time - start.time;time.taken

for (i in seq_along(final)) {
  setwd("C:/Users/Usuario/Desktop/Ricardo/Agora vai/Bioclim")
  filename = paste(names(final)[i],'Bioclim.txt')
  write.table(final[[i]],filename, sep=' ', row.names = T)}

#===============================Domain=========================================
rm(list=ls())

output.nat<-NULL
output.exo<-NULL
auc<-NULL
thr.val<-NULL
ts<-NULL
k<-NULL

start.time <- Sys.time()

for(i in 1:100){
  group_pres <- kfold(oco, 5)
  pres_train <- oco[group_pres != 1, ]
  pres_test <- oco[group_pres == 1, ]
  group_bkg <- kfold(backgr, 5)
  backg_train <- backgr[group_bkg != 1, ]
  backg_test <- backgr[group_bkg == 1, ]
  model <- domain(nat, pres_train)
  model.nat <- predict(model, nat)
  model.exo <- predict(model, exo)
  output.nat <- cbind(output.nat, values(model.nat))
  output.exo <- cbind(output.exo, values(model.exo))
  p<- extract(model.nat, pres_test)
  a<- extract(model.nat, backg_test)
  model.eval <- evaluate(model, p=p, a=a)
  mod.thr<- threshold(model.eval)
  thr.val<-rbind(thr.val,mod.thr)
  thr<-mod.thr[[5]]
  comb = c(p,a)
  group = c(rep(1, length(p)), rep(0, length(a)))
  mv <- wilcox.test(p,a)
  auc[i]<- as.numeric(mv$statistic) / (length(p) * length(a))
  vp<-length(p[p >= thr])
  fp<-length(a[a >= thr])
  fn<-length(p[p < thr])
  vn<-length(a[a < thr])
  mc<-matriz<-matrix(c(vp,fn,fp,vn), nrow = 2,ncol = 2)
  ts[i]<-tss(mc)
  k[i]<-kappa.acc(mc)
  final<-list(NAT=output.nat,EXO=output.exo,THR=thr.val,VAL=cbind(auc,ts,k))
}

end.time <- Sys.time()
time.taken <- end.time - start.time;time.taken

for (i in seq_along(final)) {
  setwd("C:/Users/Usuario/Desktop/Ricardo/Agora vai/Domain")
  filename = paste(names(final)[i],'Domain.txt')
  write.table(final[[i]],filename, sep=' ', row.names = T)}

#===============================Mahal=========================================
rm(list=ls())

output.nat<-NULL
output.exo<-NULL
auc<-NULL
thr.val<-NULL
ts<-NULL
k<-NULL

start.time <- Sys.time()

for(i in 1:100){
  group_pres <- kfold(oco, 5)
  pres_train <- oco[group_pres != 1, ]
  pres_test <- oco[group_pres == 1, ]
  group_bkg <- kfold(backgr, 5)
  backg_train <- backgr[group_bkg != 1, ]
  backg_test <- backgr[group_bkg == 1, ]
  model <- mahal(nat, pres_train)
  model.nat <- predict(model, nat)
  model.exo <- predict(model, exo)
  output.nat <- cbind(output.nat, values(model.nat))
  output.exo <- cbind(output.exo, values(model.exo))
  p<- extract(model.nat, pres_test)
  a<- extract(model.nat, backg_test)
  model.eval <- evaluate(model, p=p, a=a)
  mod.thr<- threshold(model.eval)
  thr.val<-rbind(thr.val,mod.thr)
  thr<-mod.thr[[5]]
  comb = c(p,a)
  group = c(rep(1, length(p)), rep(0, length(a)))
  mv <- wilcox.test(p,a)
  auc[i]<- as.numeric(mv$statistic) / (length(p) * length(a))
  vp<-length(p[p >= thr])
  fp<-length(a[a >= thr])
  fn<-length(p[p < thr])
  vn<-length(a[a < thr])
  mc<-matriz<-matrix(c(vp,fn,fp,vn), nrow = 2,ncol = 2)
  ts[i]<-tss(mc)
  k[i]<-kappa.acc(mc)
  final<-list(NAT=output.nat,EXO=output.exo,THR=thr.val,VAL=cbind(auc,ts,k))
}

end.time <- Sys.time()
time.taken <- end.time - start.time;time.taken

for (i in seq_along(final)) {
  setwd("C:/Users/Usuario/Desktop/Ricardo/Agora vai/Mahal")
  filename = paste(names(final)[i],'Mahal75_100.txt')
  write.table(final[[i]],filename, sep=' ', row.names = T)}

#===============================Maxent=========================================
output.nat<-NULL
output.exo<-NULL
auc<-NULL
thr.val<-NULL
ts<-NULL
k<-NULL

start.time <- Sys.time()

for(i in 1:100){
  group_pres <- kfold(oco, 5)
  pres_train <- oco[group_pres != 1, ]
  pres_test <- oco[group_pres == 1, ]
  group_bkg <- kfold(backgr, 5)
  backg_train <- backgr[group_bkg != 1, ]
  backg_test <- backgr[group_bkg == 1, ]
  model <- maxent(nat, pres_train)
  model.nat <- predict(model, nat)
  model.exo <- predict(model, exo)
  output.nat <- cbind(output.nat, values(model.nat))
  output.exo <- cbind(output.exo, values(model.exo))
  p<- extract(model.nat, pres_test)
  a<- extract(model.nat, backg_test)
  model.eval <- evaluate(model, p=p, a=a)
  mod.thr<- threshold(model.eval)
  thr.val<-rbind(thr.val,mod.thr)
  thr<-mod.thr[[5]]
  comb = c(p,a)
  group = c(rep(1, length(p)), rep(0, length(a)))
  mv <- wilcox.test(p,a)
  auc[i]<- as.numeric(mv$statistic) / (length(p) * length(a))
  vp<-length(p[p >= thr])
  fp<-length(a[a >= thr])
  fn<-length(p[p < thr])
  vn<-length(a[a < thr])
  mc<-matriz<-matrix(c(vp,fn,fp,vn), nrow = 2,ncol = 2)
  ts[i]<-tss(mc)
  k[i]<-kappa.acc(mc)
  final<-list(NAT=output.nat,EXO=output.exo,THR=thr.val,VAL=cbind(auc,ts,k))
}

end.time <- Sys.time()
time.taken <- end.time - start.time;time.taken

plot(model.exo)
for (i in seq_along(final)) {
  setwd("C:/Users/Usuario/Desktop/Ricardo/Agora vai/Maxent")
  filename = paste(names(final)[i],'Maxent.txt')
  write.table(final[[i]],filename, sep=' ', row.names = T)}

#==============================Suport Vector Machine ======================================
output.nat<-NULL
output.exo<-NULL
auc<-NULL
thr.val<-NULL
ts<-NULL
k<-NULL

start.time <- Sys.time()

for(i in 1:100){
  group_pres <- kfold(oco, 5)
  group_bkg <- kfold(backgr, 5)
  pres_train <- oco[group_pres != 1, ]
  backg_train <- data.frame(backgr[group_bkg != 1, ])
  names(backg_train)<-c("long","lat")
  train <- rbind(pres_train,backg_train)
  pres_test <- oco[group_pres == 1, ]
  backg_test <- backgr[group_bkg == 1, ]
  pb_train <- c(rep(1, nrow(pres_train)), rep(0, nrow(backg_train)))
  envtrain <- extract(nat, train)
  envtrain <- data.frame( cbind(pa=pb_train, envtrain))
  model <-ksvm(pa~.,data=envtrain,ext=ext)
  model.nat <- predict(model=model, object=nat)
  model.exo <- predict(model=model, object=exo)
  output.nat <- cbind(output.nat, values(model.nat))
  output.exo <- cbind(output.exo, values(model.exo))
  p<- extract(model.nat, pres_test)
  a<- extract(model.nat, backg_test)
  model.eval <- evaluate(model, p=p, a=a)
  mod.thr<- threshold(model.eval)
  thr.val<-rbind(thr.val,mod.thr)
  thr<-mod.thr[[5]]
  comb = c(p,a)
  group = c(rep(1, length(p)), rep(0, length(a)))
  mv <- wilcox.test(p,a)
  auc[i]<- as.numeric(mv$statistic) / (length(p) * length(a))
  vp<-length(p[p >= thr])
  fp<-length(a[a >= thr])
  fn<-length(p[p < thr])
  vn<-length(a[a < thr])
  mc<-matriz<-matrix(c(vp,fn,fp,vn), nrow = 2,ncol = 2)
  ts[i]<-tss(mc)
  k[i]<-kappa.acc(mc)
  final<-list(NAT=output.nat,EXO=output.exo,THR=thr.val,VAL=cbind(auc,ts,k))
}

end.time <- Sys.time()
time.taken <- end.time - start.time
time.taken

for (i in seq_along(final)) {
  setwd("C:/Users/Usuario/Desktop/Ricardo/Agora vai/SVM")
  filename = paste(names(final)[i],'SVM.txt')
  write.table(final[[i]],filename, sep=' ', row.names = T)}
####  

#####================pROC procedure ===============================
#  Working out Grid Values: All procedures used to prepare the data using the pROC analysis were obtained in https://kuscholarworks.ku.edu/handle/1808/10059
#A. Coordinates frin native and non native rasters
setwd("C:/Users/Usuario/Desktop/Ricardo/Agora vai/Rasters txt")
africa<-read.table("Africa.raster.txt", header=T)[,c(1,2)]
samerica<-read.table("SAmerica.raster.txt", header=T)[,c(1,2)]
oco<-read.table("oco_1320.txt", header=T) #Final occurrence data

#B. Valores de teste
rd<-oco[sample(0.25*nrow(oco)),] #test data

#C. Grid Values

#Calculate mean raster values
#NATIVE
setwd("C:/Users/Usuario/Desktop/Ricardo/Agora vai/NAT mod")

lista.mod<-list.files(pattern = "txt")
nome<-gsub(".txt","",lista.mod)
modelos<-lapply(lista.mod, read.table, header=T)
names(modelos)<-nome

media.mod<-lapply(modelos, function(x){
  media=apply(x,1,mean)
  cbind(africa,media)})

raster.nat<-lapply(media.mod, function(x){
  gridded(x)<-~x+y
  r<-stack(x)})

pAUC.grid.data<-lapply(raster.nat, function(r){
  val<-extract(r,1:ncell(r),df=T)
  omit<-na.omit(val)
  count<-round(omit$media,2)*100
  df<-data.frame(table(count))
}) #pROC grid dataset

for(i in seq_along(pAUC.grid.data)){
  colnames(pAUC.grid.data[[i]])<-c('VALUE_','COUNT_')
  setwd("C:/Users/Usuario/Desktop/Ricardo/Agora vai/pAUC")
  filename = paste(names(pAUC.grid.data)[i],'GRID_VAL.csv')
  write.table(pAUC.grid.data[[i]],filename,quote=F, row.names = F, sep=",")}

#D. Point values
p.val<-lapply(raster.nat, function(x){
  val<-extract(x,rd, df=T)
  p.count<-round(val$media,2)*100
  p.data<-cbind(val$ID, p.count)
}) #pROC occurence dataset


for(i in seq_along(p.val)){
  colnames(p.val[[i]])<-c('ID','Values')
  setwd("C:/Users/Usuario/Desktop/Ricardo/Agora vai/pAUC")
  filename = paste(names(p.val)[i],'OCO_VAL.csv')
  write.table(p.val[[i]],filename,quote=F, row.names = F, sep="\t")}

#===========================================================================================
# Data Analysis
rm(list=ls())
#A. Suitability Map to South America

sa<-map("worldHires",fill=TRUE,col="transparent", c("argentina", "bolivia", "brazil", "chile", "colombia", "ecuador", "guyana", "paraguay", "peru", "suriname", "uruguay", "venezuela"))
IDs <- sapply(strsplit(sa$names, ":"), function(x) x[1]) 
sa_pol<-map2SpatialPolygons(sa, IDs=IDs, proj4string = CRS("+proj=longlat +ellps=WGS84"))

setwd("/home/ricardo/Área de Trabalho/Agora vai/Rasters txt")
cord<-read.table("SAmerica.raster.txt", header=T)[,1:2]

setwd("/home/ricardo/Área de Trabalho/Agora vai/EXO")
lista<-list.files(pattern = "txt")
exo<-lapply(lista, read.table,header=T)
names(exo)<-c("Bioclim","Gower","Mahalanobis", "MAXENT","SVM")

ras.exo<-lapply(exo, function(x){
  med<-apply(x,1,mean)
  cords<-cbind(cord,med)
  gridded(cords)<-~x+y
  r<-stack(cords)
})

rescale<-function(r){((r-cellStats(r,"min"))/(cellStats(r,"max")-cellStats(r,"min")))} #This function rescales raster values from a zero to one. 
#This procedure was used only to produce the suitability map. We adopt this procedure in function of negative values produced by Mahalanobis algorithm
exo.resc<-lapply(ras.exo,rescale)
grupo.exo<-stack(exo.resc)
names(grupo.exo)<-c("Bioclim","Gower","Mahalanobis", "MAXENT","SVM")
media.exo<-mean(grupo.exo)

plot(media.exo)
plot(sa_pol,add=T)

setwd("/home/ricardo/Área de Trabalho/Agora vai/Plots")

setEPS()
postscript("Exotic suitability.eps")
c<-colorRampPalette(c(rgb(0.5,0.6,0.9),rgb(1,1,0),rgb(1,0,0)))(20)
plot(media.exo, col=c,axes=F, box=F, legend = T)
plot(sa_pol, add=T)
maps::map.scale(x=-55, y=-47, ratio=FALSE, relwidth=0.15)
north.arrow(xb=-49, yb=-42, len=1, lab="N") 
dev.off()

#====================================================
# working with maps
#I. Add states
setwd("/home/ricardo/Área de Trabalho/Shapes/Shapefiles Brasil/estados_2010") # Brazilian states shapefiles are disponible at:Instituto Brasileiro de Geografia e Estatística (IBGE – www.ibge.gov.br).
shp<-readShapeSpatial('estados_2010.shp')
crs(shp)<-"+proj=longlat +ellps=WGS84"
PA<-subset(shp,nome=="Par\xe1")
DF<-subset(shp,nome=="Distrito Federal")
SP<-subset(shp,nome=="S\xe3o Paulo")
PR<-subset(shp,nome=="Paran\xe1")
ES<-subset(shp,nome=="Esp\xedrito Santo")
RJ<-subset(shp,nome=="Rio de Janeiro")
MG<-subset(shp,nome=="Minas Gerais")
BA<-subset(shp,nome=="Bahia")
MA<-subset(shp,nome=="Maranh\xe3o")
Pa<-subset(shp,nome=="Para\xedba")
SE<-subset(shp,nome=="Sergipe")
RN<-subset(shp,nome=="Rio Grande do Norte")
AL<-subset(shp,nome=="Alagoas")
PE<-subset(shp,nome=="Pernambuco")
Ce<-subset(shp,nome=="Cear\xe1")
PI<-subset(shp,nome=="Piau\xed")
GO<-subset(shp,nome=="Goi\xe1s")
SC<-subset(shp,nome=="Santa Catarina")
RS<-subset(shp,nome=="Rio Grande do Sul")

#B.2 Define regions
#west center
sudeste<-rbind(SP,RJ,ES,PR,SC,RS,MG)
sudeste_pol<- SpatialPolygons(sudeste@polygons,proj4string=sudeste@proj4string)
sudeste<-crop(media.exo,extent(sudeste_pol))
sud<-mask(sudeste,sudeste_pol)

setwd("/home/ricardo/Área de Trabalho/Agora vai/Plots")
postscript("Centro_Sul.eps")
plot(sud, col=c,axes=F,box=F,legend = F)
plot(SP,add=T)
plot(PR,add=T)
plot(ES,add=T)
plot(RJ,add=T)
plot(MG,add=T)
plot(SC,add=T)
plot(RS,add=T)

text(-52,-24.5,cex=0.8, labels="PR",adj=0.5,srt=0)
text(-50,-22,cex=0.8, labels="SP",adj=0.5,srt=0)
text(-41.5,-22.5,cex=0.8, labels="RJ",adj=0,srt=0)
text(-40.6,-21,cex=0.8, labels="ES",adj=0,srt=0)
text(-45,-17,cex=0.8, labels="MG",adj=0.5,srt=0)
text(-50,-27.5,cex=0.8, labels="SC",adj=0.5,srt=0)
text(-53,-30,cex=0.8, labels="RS",adj=0.5,srt=0)
dev.off()

#North eastern
nord<-c(-48.91667, -35, -19.125, 1.375)
nord2<-crop(media.exo,nord)

Nordeste<-rbind(BA,MA,Pa,SE,RN,AL,PE,PI,Ce)
nord_pol<- SpatialPolygons(Nordeste@polygons, proj4string=Nordeste@proj4string)
nordeste<-crop(media.exo,extent(nord_pol))
nord<-mask(nordeste,nord_pol)


setEPS()
postscript("Centro_Nordeste.eps")
plot(nord, col=c,axes=F, box=F,legend = F)
plot(BA,add=T)
plot(MA,add=T)
plot(Pa,add=T)
plot(SE,add=T)
plot(RN,add=T)
plot(AL,add=T)
plot(PE,add=T)
plot(PI,add=T)
plot(Ce,add=T)

text(-43,-12,cex=0.8, labels="BA",adj=0.5,srt=0)
text(-37,-11.3,cex=0.8, labels="SE",adj=0,srt=0)
text(-35,-10,cex=0.8, labels="AL",adj=1,srt=0)
text(-34.7,-8.5,cex=0.7, labels="PE",adj=0,srt=0)
text(-34.8,-7,cex=0.7, labels="PB",adj=0,srt=0)
text(-35.3,-5,cex=0.7, labels="RN",adj=0,srt=0)
text(-39,-2.8,cex=0.8, labels="CE",adj=0,srt=0)
text(-41.5,-2.5,cex=0.8, labels="PI",adj=0.5,srt=0)
text(-44,-2,cex=0.8, labels="MA",adj=0,srt=0)
dev.off()

#centre
#Goias
go_pol<- SpatialPolygons(GO@polygons, proj4string=GO@proj4string)
goias<-crop(media.exo,extent(go_pol))
goias2<-mask(goias,go_pol)

setEPS()
postscript("Federal district.eps")
plot(goias2, col=c,axes=F,box=F,legend = F)
plot(GO,add=T)
text(-51,-17.5,cex=0.8, labels="GO",adj=0.5,srt=0)
points(-47.5,-15.7,cex=0.8,pch=8)
text(-47.8,-15.7,cex=0.8, labels="DF",adj=0.5,srt=0)
dev.off()


#==========================================================================
#Binary Maps
setwd("/home/ricardo/Área de Trabalho/Agora vai/THR")
list.thr<-list.files(pattern = 'txt')

thresholds<-lapply(list.thr, function(x){
  df<-read.table(x, header=T)[,5]
  mean(df)})

zero.um<-mapply(function(x,y){
  zero<-calc(y, fun=function(values){values[values<x]<-0; return(values)})
  um<-calc(zero, fun=function(values){values[values>x]<-1; return(values)})
},x=thresholds,y=ras.exo)

bin.plot<-na.omit(stack(zero.um))
sum.bin<-sum(bin.plot)
sup.plot<-stack(bin.plot, sum.bin)
names(sup.plot)<-c("Bioclim","Gower","Mahalanobis", "MAXENT","SVM",paste("Combined models"))

setwd("/home/ricardo/Área de Trabalho/Agora vai/Plots")
setEPS()
postscript("Binary.eps")
plot(sup.plot, col=c)
plot(sa_pol, add=T)
dev.off()

setwd("/home/ricardo/Área de Trabalho/Agora vai/Rasters txt")
writeRaster(sum.bin,"Bin_raster.asc",format='ascii')

br<-map("worldHires",fill=TRUE,col="transparent", regions = "brazil")
IDs <- sapply(strsplit(br$names, ":"), function(x) x[1]) 
br_pol<-map2SpatialPolygons(br, IDs=IDs, proj4string = CRS("+proj=longlat +ellps=WGS84"))
br_ext<-crop(sum.bin,extent(br_pol))
brasil_bin<-mask(br_ext,br_pol)

writeRaster(brasil_bin,"Bin_Brazil_raster.asc",format='ascii')

setwd("/home/ricardo/Área de Trabalho/Agora vai/Plots")
setEPS()
postscript("Brazil.bin_lim2.eps")
plot(brasil_bin>2,axes=F,box=F,legend = F)
plot(br_pol,add=T)
dev.off()

# South eastern Binary map 
sudeste.bin<-crop(brasil_bin>2,extent(sudeste_pol))
sud.bin<-mask(sudeste.bin,sudeste_pol)

#G. port presence
setwd("/home/ricardo/Área de Trabalho/N&C revision/Dados")
portos<-read.table("Portos Brasileiros.csv",header = T, sep = ",")
p<-SpatialPoints(coords=portos[-19,6:5],proj4string=CRS("+proj=longlat +ellps=WGS84"))

#Brazil occurence data (for more detais see suplementary material)
setwd("/home/ricardo/Área de Trabalho/N&C revision/Dados")
br_oco<-read.csv('Pontos Brasil.csv')
col<-data.frame(br_oco$Longdd,br_oco$Latdd) 
pontos<-na.omit(col)
brasil<-SpatialPoints(coords=pontos,proj4string=CRS("+proj=longlat +ellps=WGS84"))
last_oco<-pontos[5,];last_oco
last_oc<-SpatialPoints(coords=last_oco,proj4string=CRS("+proj=longlat +ellps=WGS84"))
circ50<-circles(last_oc,d=50000) #50 km

setwd("/home/ricardo/Área de Trabalho/Agora vai/Plots")
setEPS()
postscript("Centro_Sul_bin_lim2.eps")
plot(sud.bin,axes=F,box=F,legend = F)
plot(SP,add=T)
plot(PR,add=T)
plot(ES,add=T)
plot(RJ,add=T)
plot(MG,add=T)
plot(SC,add=T)
plot(RS,add=T)
points(p, cex=0.7, pch = 8)#Adiciona ocorrência dos portos
points(p, cex=0.8, pch = 8, col = "red")#Adiciona ocorrência dos portos
plot(circ50,axes = F,add=T, lwd = 2, border = "darkblue")#Adiciona circ no raio de 50Km da última ocorrência
text(-47,-24.8, cex=0.8, labels="Porto de santos",adj=0,srt=0)
text(-52,-24.5,cex=0.8, labels="PR",adj=0.5,srt=0)
text(-50,-22,cex=0.8, labels="SP",adj=0.5,srt=0)
text(-41.5,-22.5,cex=0.8, labels="RJ",adj=0,srt=0)
text(-40.6,-21,cex=0.8, labels="ES",adj=0,srt=0)
text(-45,-17,cex=0.8, labels="MG",adj=0.5,srt=0)
text(-50,-27.5,cex=0.8, labels="SC",adj=0.5,srt=0)
text(-53,-30,cex=0.8, labels="RS",adj=0.5,srt=0)
dev.off()

#Binary North eastern
setwd("/home/ricardo/Área de Trabalho/N&C revision/Dados")
p_nord<-SpatialPoints(coords=portos[-c(31,32),6:5],proj4string=CRS("+proj=longlat +ellps=WGS84"))
nordeste.bin<-crop(brasil_bin>2,extent(nord_pol))
nord.bin<-mask(nordeste.bin,nord_pol)

setwd("/home/ricardo/Área de Trabalho/Agora vai/Plots")

setEPS()
postscript("Centro_Nordeste_bin_lim2.eps")
plot(nord.bin, axes=F, box=F,legend = F)
plot(BA,add=T)
plot(MA,add=T)
plot(Pa,add=T)
plot(SE,add=T)
plot(RN,add=T)
plot(AL,add=T)
plot(PE,add=T)
plot(PI,add=T)
plot(Ce,add=T)
points(p_nord, cex=0.8, pch = 8)
points(p_nord, cex=0.7, pch = 8, col = "red")
text(-43,-12,cex=0.8, labels="BA",adj=0.5,srt=0)
text(-37,-11.3,cex=0.8, labels="SE",adj=0,srt=0)
text(-35,-10,cex=0.8, labels="AL",adj=1,srt=0)
text(-34.7,-8.5,cex=0.7, labels="PE",adj=0,srt=0)
text(-34.8,-7,cex=0.7, labels="PB",adj=0,srt=0)
text(-35.3,-5,cex=0.7, labels="RN",adj=0,srt=0)
text(-39,-2.8,cex=0.8, labels="CE",adj=0,srt=0)
text(-41.5,-2.5,cex=0.8, labels="PI",adj=0.5,srt=0)
text(-44,-2,cex=0.8, labels="MA",adj=0,srt=0)
dev.off()

#Santos/Cubatão border (Baixada Santista)
setwd("/home/ricardo/Área de Trabalho/Shapes/Shapefiles Brasil/municipios_2010")
muni<-readShapeSpatial('municipios_2010.shp', proj4string = CRS("+proj=longlat +ellps=WGS84"))

#1. Drawing Baixada santista
bertioga<-subset(muni,codigo_ibg=="3506359")
santos<-subset(muni,codigo_ibg=="3548500")
guaruja<-subset(muni,codigo_ibg=="3518701")
cubatao<-subset(muni,codigo_ibg=="3513504")
saovicente<-subset(muni,codigo_ibg=='3551009')
praiagrande<-subset(muni,codigo_ibg=='3541000')
mongagua<-subset(muni,codigo_ibg=='3531100')
itanhaem<-subset(muni,codigo_ibg=='3522109')
peruibe<-subset(muni,codigo_ibg=='3537602')

sc<-rbind(bertioga,santos,guaruja,cubatao,saovicente,praiagrande,mongagua,itanhaem,peruibe)#combina os SpatialPoligonsDataFrame
sc<-spTransform(sc, CRS("+proj=longlat +ellps=WGS84"))

lu <- data.frame()
lu <- rbind(lu, sc@data)
lu$codigo_ibg <- as.character(lu$codigo_ibg)
lu$nome <- as.character(lu$nome)
lu$region <- NA
lu$region <- "Baixada Santista"
sc@data$codigo_ibg<-as.character(sc@data$codigo_ibg)
sc@data<-full_join(sc@data, lu, by = "codigo_ibg")
sc@data<-select(sc@data, nome.y)
colnames(sc@data) <- c("code", "name", "country")
row.names(sc) <- row.names(sc@data)
bsc<- spChFIDs(sc, row.names(sc))
bsc_border <- gUnaryUnion(sc, id = sc@data$region)
borda<-SpatialPolygonsDataFrame(bsc_border,data=as.data.frame(bsc_border))
plot(bsc_border,add=T, border = 'red', lwd = 2)

SP_pol<- SpatialPolygons(SP@polygons,proj4string=SP@proj4string)

#Define box from Baixada Santista
circ_range<-c( -47.36944,-45.22736, -24.97286,-23.07522)
circ_r<-crop(brasil_bin>2,circ_range)

#Creating circles
cir25<-circles(last_oc,d=25000) #25 km
circ50<-circles(last_oc,d=50000) #50 km
circ100<-circles(last_oc,d=100000) #100 km

#Calculating distances between the last occurrences and nearests pixels
distHaversine(c(-46.35086,-23.23439), c(-46.29063,-23.98728), r=6378137)
distHaversine(c(-47.01245, -23.48418), c(-46.29063,-23.98728), r=6378137)
distHaversine(c(-46.35086,-23.23439), c(-45.98856,-23.4921), r=6378137)

setwd("/home/ricardo/Área de Trabalho/Agora vai/Plots")
setEPS()
postscript("Circ_sp_lim2")
plot(circ_r, axes=F, box=F, legend=F)
plot(SP_pol, add=T)
plot(bsc_border,add=T,lwd = 2, lty = 1, border = "red")
plot(bsc_border,add=T,lwd = 1, lty = 2)
points(last_oc, pch = 19, cex =1, col="blue")
plot(cir25,axes = F,add=T, lwd = 2)
plot(circ50,axes = F,add=T, lwd = 2)
plot(circ100,axes = F,add=T, lwd = 2, lty=2 )
points(p, cex=0.8, pch = 8, lty=2)
points(p, cex=0.6, pch = 8, col = "red",lty=2)
arrows(-46.29063,-23.98728,-46.35086,-23.23439,lty=2,col='blue')
arrows(-46.29063,-23.98728,-47.01245, -23.48418, lty=2,col='blue')
arrows(-46.29063,-23.98728,-45.98856,-23.4921, lty=2,col='blue')
text(-47.03632, -23.45836, cex=0.8, labels="2",lwd=2)
text(-46.35086,-23.205, cex=0.8, labels="1",lwd=2)
text(-45.97806,-23.47292, cex=0.8, labels="3",lwd=2)
text(-46.3,-24.25, cex=0.8, labels="25 Km")
text(-46.3,-24.5, cex=0.8, labels="50 Km")
text(-46.3,-24.95, cex=0.8, labels="100 Km")
text(-46.3,-24.12, cex=0.8, labels="PS")
text(-46.2,-23.4, cex=0.8, labels="~ 84 Km")
text(-46.78,-23.5, cex=0.8, labels="~ 92 Km")
text(-45.89931, -23.57363, cex=0.8, labels="~ 46 Km")
dev.off()

#=======================================================================================
#Brazilian occurence

#Presence
setwd("/home/ricardo/Área de Trabalho/N&C revision/Dados")
br_oco<-read.csv('Pontos Brasil.csv')
col<-data.frame(br_oco$Longdd,br_oco$Latdd) 
pontos<-na.omit(col)
brasil<-SpatialPoints(coords=pontos,proj4string=CRS("+proj=longlat +ellps=WGS84"))
points(brasil, pch=19, col="black", cex=0.5)
last_oco<-pontos[5,];last_oco
last_oc<-SpatialPoints(coords=last_oco,proj4string=CRS("+proj=longlat +ellps=WGS84"))

#Suitability values in image
setwd("/home/ricardo/Área de Trabalho/Agora vai/Plots")
setEPS()
postscript("Suit circ")
circ_r2<-crop(media.exo,circ_range)
plot(circ_r2, axes=F, box=F, legend=T, main="Suitability values")
xycoords <- xyFromCell(circ_r2, 1:ncell(circ_r2))
value <- extract(circ_r2, xycoords)
text(xycoords, labels = round(value,3))
plot(SP_pol, add=T)
plot(bsc_border,add=T,lwd = 2, lty = 1, border = "red")
plot(bsc_border,add=T,lwd = 1, lty = 2)
points(last_oc, pch = 19, cex =1, col="blue")
plot(cir25,axes = F,add=T, lwd = 1,lty=2)
plot(circ50,axes = F,add=T, lwd = 1,lty=2)
plot(circ100,axes = F,add=T, lwd = 1, lty=2 )
points(p, cex=0.8, pch = 8, lty=2)
points(p, cex=0.6, pch = 8, col = "red",lty=2)
points(brasil, pch=15, col="black", cex=0.5)#ocorrencia
text(-46.3,-24.25, cex=0.8, labels="25 Km")
text(-46.3,-24.5, cex=0.8, labels="50 Km")
text(-46.3,-24.95, cex=0.8, labels="100 Km")
text(-46.3,-24.12, cex=0.8, labels="PS")
dev.off()

##=========================Relative importance===========================
setwd("/home/ricardo/Área de Trabalho/Agora vai/Rasters txt")
as<-round(read.table('Exotic raster.txt', header=T),4)
gridded(as)<-~x+y
as.r<-stack(as)
br_vars<-crop(as.r,extent(br_pol))
brasil_vars<-mask(br_vars,br_pol)
plot(brasil_vars)

br_ext<-crop(media.exo,extent(br_pol))
brasil_ens<-mask(br_ext,br_pol)
plot(brasil_ens)

suit_ens<-data.frame(Suitability = extract(brasil_ens, 1:ncell(brasil_ens)))
val_ens<-data.frame(extract(brasil_vars, 1:ncell(brasil_vars)))
data<-na.omit(cbind(suit_ens,val_ens))
imp<-calc.relimp(scale(data), type="lmg",rela=T);imp#85,02% explained

setwd("/home/ricardo/Área de Trabalho/Agora vai")
write.table(sort(imp@lmg,decreasing = T), "imp.rel_brazil.txt", sep=" ", row.names = T)

#====================================================================
#Correlation between variables retained and suitability
sort(imp@lmg,decreasing = T)
names(data)
par(mfrow=c(2,2))
plot(data[,9], data[,1], pch=16, cex=0.5, xlab='Footprint', ylab='Suitability', main='Anthropic')
plot(data[,3], data[,1], pch=19, cex=0.5, xlab='Annual Precipitation ', ylab='Suitability', main='Climatic')
plot(data[,5], data[,1], pch=19, cex=0.5, xlab='Precipitation of Driest Quarter', ylab='Suitability', main='Climatic')
plot(data[,10], data[,1], pch=19, cex=0.5, xlab='Nightlight', ylab='Suitability', main='Anthropic')

#Making correlation supplementary plot

M <- cor(data)
colnames(M)<-c("Suitability","Annual Mean Temp","Annual Prec","Prec of Wettest Month","Prec of Driest Quarter",
               "Max Temp of Warmest Month","Min Temp of Coldest Month",  "Temp Annual Range","Footprint","Nightlight")
rownames(M)<-c("Suitability","Annual Mean Temp","Annual Prec","Prec of Wettest Month","Prec of Driest Quarter",
                 "Max Temp of Warmest Month","Min Temp of Coldest Month",  "Temp Annual Range","Footprint","Nightlight")

corrplot(M, type="lower")

#=========================================================================================
## MESS 
#A. Loading native and non native variables 
setwd("/home/ricardo/Área de Trabalho/Agora vai/Rasters txt")

af<-read.table('Native raster.txt', header=T)
af<-cbind(af[,1:2], scale(af[,-c(1:2)]))

as<-read.table("Exotic raster.txt",header=T)
as<-cbind(as[,1:2], scale(as[,-c(1:2)]))

oco<-read.table("oco_1320.txt", header=T)
s.oco<-oco[sample(1:nrow(oco),0.75*nrow(oco)),]

gridded(af)<-~x+y
gridded(as)<-~x+y

predictors_af <- stack(af)
predictors_as <- stack(as)

#B. MESS
reference_points <- extract(predictors_af, s.oco)
mss <- mess(x=predictors_as, v=reference_points, full=F)
c<-colorRampPalette(c(rgb(0.5,0.6,0.9),rgb(1,1,0),rgb(1,0,0)))(20)

setwd('/home/ricardo/Área de Trabalho/Agora vai/Plots')
setEPS()
postscript("MESS x SUIT")
par(mfrow=c(1,2))
plot(mss, col=c, main='MESS',axes=FALSE, box=F)
plot(sa_pol, add=T)
plot(media.exo, col=c, main="Suitability model",axes=FALSE, box=F)
plot(sa_pol, add=T)
dev.off()

#=========================================================
# BIOME RELATIVE IMPORTANCE INDEX
area_km2<-function(x){x # x = raster layer
  cell_size<-area(x, na.rm=TRUE, weights=FALSE)
  cell_size<-cell_size[!is.na(cell_size)]
  raster_area<-length(cell_size)*median(cell_size)
  return(raster_area)}

bindex<-function(x,y){#x=raster e y=polygon
  raster<-mask(x>2,y)
  suit.pol<-rasterToPolygons(raster, fun=function(x){x==1})
  suit.raster<-mask(raster, suit.pol)
  suit.km2<-area_km2(suit.raster)
  km2<-area_km2(raster)
  index<-((suit.km2)/(km2))
  return(index)}

setwd("/home/ricardo/Área de Trabalho/Shapes/Mata Atlantica")

bioma<-readShapeSpatial("Biomas5000.shp",proj4string = CRS("+proj=longlat +ellps=WGS84"))
ma<-bioma[bioma$"NOM_BIOMA"=='Mata Atl\xe2ntica',] 
ce<-bioma[bioma$"NOM_BIOMA"=='Cerrado',] 
ca<-bioma[bioma$"NOM_BIOMA"=='Caatinga',] 
am<-bioma[bioma$"NOM_BIOMA"=='Amaz\xf4nia',]
pan<-bioma[bioma$"NOM_BIOMA"=='Pantanal',]
pam<-bioma[bioma$"NOM_BIOMA"=='Pampa',]
brasil.pol<-rbind(ma,ce,ca,am,pan,pam)

setwd("/home/ricardo/Área de Trabalho/Agora vai/Rasters txt")
br<-raster('Bin_Brazil_raster.asc',crs="+proj=longlat +datum=WGS84")
val<-extract(br, 1:ncell(br))
length(na.omit(val[val>2]))/length(na.omit(val))#0.1971881
ras.pol.br.suit<-rasterToPolygons(br, fun=function(x){x>2})
suit.raster<-mask(br,ras.pol.br.suit)
br.km2<-area_km2(suit.raster) #1627503 ou 16.275,03

pols<-list(ma,ce,ca,am,pan,pam)
names(pols)<-c("Atlantic Forest","Cerrado","Caatinga","Amazon Rain Forest","Pantanal","Pampa")

BRI<-lapply(pols,function(i){ind<-bindex(br,i)})
names(BRI)<-names(pols)
write.table(do.call(cbind,BRI), 'REI Biome.txt', row.names = T, sep=" ")

#===================================================================================================
